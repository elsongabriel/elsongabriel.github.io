{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-client/add-client.component.css","webpack:///./src/app/components/add-client/add-client.component.html","webpack:///./src/app/components/add-client/add-client.component.ts","webpack:///./src/app/components/client-details/client-details.component.css","webpack:///./src/app/components/client-details/client-details.component.html","webpack:///./src/app/components/client-details/client-details.component.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/edit-client/edit-client.component.css","webpack:///./src/app/components/edit-client/edit-client.component.html","webpack:///./src/app/components/edit-client/edit-client.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/register.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/app/services/settings.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {ClientsComponent} from './components/clients/clients.component';\nimport {AddClientComponent} from './components/add-client/add-client.component';\nimport {EditClientComponent} from './components/edit-client/edit-client.component';\nimport {ClientDetailsComponent} from './components/client-details/client-details.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from './guards/auth.guard';\nimport {RegisterGuard} from './guards/register.guard';\n\nconst routes: Routes = [\n    {path: '', component: DashboardComponent, canActivate: [AuthGuard]},\n    {path: 'login', component: LoginComponent},\n    {path: 'register', component: RegisterComponent, canActivate: [RegisterGuard]},\n    {path: 'clients', component: ClientsComponent, canActivate: [AuthGuard]},\n    {path: 'client/add', component: AddClientComponent, canActivate: [AuthGuard]},\n    {path: 'client/edit/:id', component: EditClientComponent, canActivate: [AuthGuard]},\n    {path: 'client/:id', component: ClientDetailsComponent, canActivate: [AuthGuard]},\n    {path: 'settings', component: SettingsComponent, canActivate: [AuthGuard]},\n    {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n    exports: [RouterModule],\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    providers: [AuthGuard, RegisterGuard]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <flash-messages></flash-messages>\\n    <router-outlet></router-outlet>\\n</div>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'client-dashboard';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {FlashMessagesModule} from 'angular2-flash-messages';\n\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {ClientsComponent} from './components/clients/clients.component';\nimport {SidebarComponent} from './components/sidebar/sidebar.component';\nimport {AddClientComponent} from './components/add-client/add-client.component';\nimport {EditClientComponent} from './components/edit-client/edit-client.component';\nimport {ClientDetailsComponent} from './components/client-details/client-details.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {ClientService} from './services/client.service';\nimport {AuthService} from './services/auth.service';\nimport {SettingsService} from './services/settings.service';\n\nimport {environment} from '../environments/environment';\nimport {AngularFireModule} from '@angular/fire';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\n// import {AngularFireModule} from 'angularfire2';\n// import {AngularFirestoreModule} from 'angularfire2/firestore';\n// import {AngularFireAuthModule} from 'angularfire2/auth';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavbarComponent,\n        DashboardComponent,\n        ClientsComponent,\n        SidebarComponent,\n        AddClientComponent,\n        EditClientComponent,\n        ClientDetailsComponent,\n        LoginComponent,\n        RegisterComponent,\n        NotFoundComponent,\n        SettingsComponent,\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        FlashMessagesModule.forRoot(),\n        AppRoutingModule,\n        AngularFireModule.initializeApp(environment.firebase/*, 'client-dashboard'*/),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [ClientService, AuthService, SettingsService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLWNsaWVudC9hZGQtY2xpZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-xs-12\\\">\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\"><i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Voltar</a>\\n    </div>\\n    <div class=\\\"col-md-6 col-xs-12\\\">\\n\\n    </div>\\n</div>\\n\\n<div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">\\n        Adicionar Cliente\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Nome</label>\\n                <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\n                       #clientName=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'is-invalid':clientName.errors && clientName.touched}\\\"\\n                       [(ngModel)]=\\\"client.name\\\"\\n                       minlength=\\\"4\\\"\\n                       maxlength=\\\"100\\\"\\n                       required>\\n                <div [hidden]=\\\"!clientName.errors?.required\\\" class=\\\"invalid-feedback\\\">Nome obrigatório</div>\\n                <div [hidden]=\\\"!clientName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                    Nome deve possuir mais de 4 caracteres\\n                </div>\\n                <div [hidden]=\\\"!clientName.errors?.maxlength\\\" class=\\\"invalid-feedback\\\">\\n                    Nome deve possuir no máximo 100 caracteres\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">E-mail</label>\\n                <input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                       #clientEmail=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'is-invalid':clientEmail.errors && clientEmail.touched}\\\"\\n                       [(ngModel)]=\\\"client.email\\\"\\n                       pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\"\\n                       required>\\n                <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">E-mail obrigatório</div>\\n                <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">E-mail incorreto</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"phone\\\">Telefone</label>\\n                <input type=\\\"text\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\"\\n                       #clientPhone=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'is-invalid':clientPhone.errors && clientPhone.touched}\\\"\\n                       [(ngModel)]=\\\"client.phone\\\"\\n                       minlength=\\\"10\\\"\\n                       maxlength=\\\"11\\\"\\n                       required>\\n                <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">Telefone obrigatório</div>\\n                <div [hidden]=\\\"!clientPhone.errors?.minlength && !clientPhone.errors?.maxlength\\\"\\n                     class=\\\"invalid-feedback\\\">\\n                    Telefone deve possuir no mínimo 10 a 11 números\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"balance\\\">Saldo</label>\\n                <input type=\\\"number\\\" id=\\\"balance\\\" name=\\\"balance\\\" class=\\\"form-control\\\"\\n                       #clientBalance=\\\"ngModel\\\"\\n                       [(ngModel)]=\\\"client.balance\\\"\\n                       [disabled]=\\\"disabledBalanceOnAdd\\\">\\n            </div>\\n\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Adicionar\\\">\\n        </form>\\n    </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Client} from \"../../models/Client\";\nimport {ClientService} from \"../../services/client.service\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {Router} from \"@angular/router\";\nimport {SettingsService} from \"../../services/settings.service\";\n\n@Component({\n    selector: 'app-add-client',\n    templateUrl: './add-client.component.html',\n    styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n\n    client: Client = {\n        name: '',\n        email: '',\n        phone: '',\n        balance: 0\n    };\n    disabledBalanceOnAdd: boolean = this.settingsService.getSettings().disableBalanceOnAdd;\n    @ViewChild('clientForm') form: any;\n\n    constructor(private flashMessage: FlashMessagesService,\n                private clientService: ClientService,\n                private router: Router,\n                private settingsService: SettingsService) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit({value, valid}: { value: Client, valid: boolean }) {\n        if (this.disabledBalanceOnAdd) {\n            value.balance = 0;\n        }\n\n        if (!valid) {\n            this.flashMessage.show('Por favor verifique os campos!', {\n                cssClass: 'alert-danger', timeout: 4000\n            });\n        } else {\n            this.clientService.newClient(value);\n            this.flashMessage.show('Cliente criado com sucesso.', {\n                cssClass: 'alert-success', timeout: 4000\n            });\n            this.form.reset();\n            this.router.navigate(['/']);\n        }\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50LWRldGFpbHMvY2xpZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">\\r\\n            <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Voltar</a>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"btn-group pull-right\\\">\\r\\n            <a routerLink=\\\"/client/edit/{{id}}\\\" class=\\\"btn btn-primary\\\">\\r\\n                <i class=\\\"fa fa-pencil\\\"></i> Editar</a>\\r\\n            <button (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\">\\r\\n                <i class=\\\"fa fa-remove\\\"></i> Remover\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n<div *ngIf=\\\"client\\\" class=\\\"card\\\">\\r\\n    <h3 class=\\\"card-header\\\">{{client.name}}</h3>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8 col-sm-6 col-xs-6\\\">\\r\\n                <h4>ID: {{client.id}}</h4>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 col-sm-6 col-xs-6\\\">\\r\\n                <h4 class=\\\"pull-right\\\">\\r\\n                    Saldo: <span [class.text-success]=\\\"hasBalance\\\"\\r\\n                                 [class.text-danger]=\\\"!hasBalance\\\">\\r\\n                        {{client.balance | currency:\\\"BRL\\\":\\\"symbol\\\"}}\\r\\n                        </span>\\r\\n                    <small *ngIf=\\\"disabledBalanceOnEdit\\\">\\r\\n                        <a (click)=\\\"showBalanceUpdateInput = !showBalanceUpdateInput\\\">\\r\\n                            <i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    </small>\\r\\n                </h4>\\r\\n                <div class=\\\"clearfix\\\">\\r\\n                    <form *ngIf=\\\"showBalanceUpdateInput\\\" (submit)=\\\"updateBalance()\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input type=\\\"text\\\" id=\\\"balance\\\" name=\\\"balance\\\" class=\\\"form-control\\\"\\r\\n                                   [(ngModel)]=\\\"client.balance\\\">\\r\\n                            <span class=\\\"input-group-btn\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Atualizar</button>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <hr>\\r\\n        <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\">E-mail: {{client.email}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Telefone: {{client.phone}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ClientService} from \"../../services/client.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {Client} from \"../../models/Client\";\nimport {SettingsService} from \"../../services/settings.service\";\n\n@Component({\n    selector: 'app-client-details',\n    templateUrl: './client-details.component.html',\n    styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n\n    id: string;\n    client: Client;\n    hasBalance: boolean = false;\n    showBalanceUpdateInput: boolean = false;\n    disabledBalanceOnEdit: boolean = this.settingsService.getSettings().disableBalanceOnEdit;\n\n    constructor(\n        private clientService: ClientService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private flashMessage: FlashMessagesService,\n        private settingsService: SettingsService) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.clientService.getClient(this.id).subscribe(client => {\n            if (client != null) {\n                this.hasBalance = (client.balance > 0);\n            }\n            this.client = client;\n        });\n    }\n\n    onDeleteClick() {\n        if (confirm('Você tem certeza que deseja remover esse cliente?')) {\n            this.clientService.deleteClient(this.client);\n            this.flashMessage.show('Cliente removido com sucesso.', {\n                cssClass: 'alert-success', timeout: 4000\n            });\n        }\n        this.router.navigate(['/']);\n    }\n\n    updateBalance() {\n        this.clientService.updateClient(this.client);\n        this.flashMessage.show('Saldo atualizado.', {\n            cssClass: 'alert-success', timeout: 4000\n        });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy9jbGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <h2><i class=\\\"fa fa-users\\\"></i> Clientes</h2>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <h5 class=\\\"text-right text-secondary\\\" *ngIf=\\\"total\\\">Total: {{total | currency:\\\"BRL\\\":\\\"symbol\\\"}}</h5>\\n    </div>\\n</div>\\n\\n<table class=\\\"table table-striped\\\" *ngIf=\\\"clients?.length > 0; else noClients\\\">\\n    <thead class=\\\"thead-inverse\\\">\\n    <tr>\\n        <th>Nome</th>\\n        <th>Email</th>\\n        <th>Balance</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let client of clients\\\">\\n        <td>{{client.name}}</td>\\n        <td>{{client.email}}</td>\\n        <td>{{client.balance | currency:\\\"BRL\\\":\\\"symbol\\\"}}</td>\\n        <td><a routerLink=\\\"client/{{client.id}}\\\" class=\\\"btn btn-secondary btn-sm\\\">\\n            <i class=\\\"fa fa-eye\\\"></i></a></td>\\n    </tr>\\n    </tbody>\\n\\n</table>\\n\\n<ng-template #noClients>\\n    <hr>\\n    <h5>Não foram encontrados clientes!</h5>\\n</ng-template>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {Client} from '../../models/Client';\n\n@Component({\n    selector: 'app-clients',\n    templateUrl: './clients.component.html',\n    styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n\n    clients: Client[];\n\n    total: number;\n\n    constructor(private clientService: ClientService) {\n    }\n\n    ngOnInit() {\n        this.clientService.getClients().subscribe(clients => {\n            this.clients = clients;\n            this.getTotal();\n        });\n    }\n\n    getTotal() {\n        this.total = this.clients.reduce((total, client) => {\n            return total + parseFloat(`${client.balance}`);\n        }, 0);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 col-xs-12\\\">\\n        <app-clients></app-clients>\\n    </div>\\n    <div class=\\\"col-md-2 col-xs-12\\\">\\n        <app-sidebar></app-sidebar>\\n    </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC1jbGllbnQvZWRpdC1jbGllbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-xs-12\\\">\\n        <a routerLink=\\\"/client/{{id}}\\\" class=\\\"btn btn-info\\\"><i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Voltar</a>\\n    </div>\\n    <div class=\\\"col-md-6 col-xs-12\\\">\\n\\n    </div>\\n</div>\\n\\n<div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">\\n        Editar Cliente\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Nome</label>\\n                <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\n                       #clientName=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'is-invalid':clientName.errors && clientName.touched}\\\"\\n                       [(ngModel)]=\\\"client.name\\\"\\n                       minlength=\\\"4\\\"\\n                       maxlength=\\\"100\\\"\\n                       required>\\n                <div [hidden]=\\\"!clientName.errors?.required\\\" class=\\\"invalid-feedback\\\">Nome obrigatório</div>\\n                <div [hidden]=\\\"!clientName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                    Nome deve possuir mais de 4 caracteres\\n                </div>\\n                <div [hidden]=\\\"!clientName.errors?.maxlength\\\" class=\\\"invalid-feedback\\\">\\n                    Nome deve possuir no máximo 100 caracteres\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">E-mail</label>\\n                <input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                       #clientEmail=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'is-invalid':clientEmail.errors && clientEmail.touched}\\\"\\n                       [(ngModel)]=\\\"client.email\\\"\\n                       pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\"\\n                       required>\\n                <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">E-mail obrigatório</div>\\n                <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">E-mail incorreto</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"phone\\\">Telefone</label>\\n                <input type=\\\"text\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\"\\n                       #clientPhone=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'is-invalid':clientPhone.errors && clientPhone.touched}\\\"\\n                       [(ngModel)]=\\\"client.phone\\\"\\n                       minlength=\\\"10\\\"\\n                       maxlength=\\\"11\\\"\\n                       required>\\n                <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">Telefone obrigatório</div>\\n                <div [hidden]=\\\"!clientPhone.errors?.minlength && !clientPhone.errors?.maxlength\\\"\\n                     class=\\\"invalid-feedback\\\">\\n                    Telefone deve possuir no mínimo 10 a 11 números\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"balance\\\">Saldo</label>\\n                <input type=\\\"number\\\" id=\\\"balance\\\" name=\\\"balance\\\" class=\\\"form-control\\\"\\n                       #clientBalance=\\\"ngModel\\\"\\n                       [(ngModel)]=\\\"client.balance\\\"\\n                       [disabled]=\\\"disabledBalanceOnEdit\\\">\\n            </div>\\n\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Salvar\\\">\\n        </form>\\n    </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ClientService} from \"../../services/client.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {Client} from \"../../models/Client\";\nimport {SettingsService} from \"../../services/settings.service\";\n\n@Component({\n    selector: 'app-edit-client',\n    templateUrl: './edit-client.component.html',\n    styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\n\n    id: string;\n    client: Client = {\n        name: '',\n        email: '',\n        phone: '',\n        balance: 0\n    };\n    disabledBalanceOnEdit: boolean = this.settingsService.getSettings().disableBalanceOnEdit;\n    @ViewChild('clientForm') form: any;\n\n    constructor(\n        private clientService: ClientService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private flashMessage: FlashMessagesService,\n        private settingsService: SettingsService) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.clientService.getClient(this.id).subscribe(client => {\n            this.client = client;\n        });\n    }\n\n    onSubmit({value, valid}: { value: Client, valid: boolean }) {\n        if (!valid) {\n            this.flashMessage.show('Por favor verifique os campos!', {\n                cssClass: 'alert-danger', timeout: 4000\n            });\n        } else {\n            value.id = this.id;\n            this.clientService.updateClient(value);\n            this.flashMessage.show('Cliente salvo com sucesso.', {\n                cssClass: 'alert-success', timeout: 4000\n            });\n            this.form.reset();\n            this.router.navigate([`/client/${this.id}`]);\n        }\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12 mx-auto\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h1 class=\\\"text-center pb-4 pt-3\\\">\\n                    <i class=\\\"fa fa-lock\\\"></i> Painel do Cliente\\n                </h1>\\n                <form (submit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">E-mail</label>\\n                        <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                               class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"password\\\">Senha</label>\\n                        <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\"\\n                               class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\n                    </div>\\n\\n                    <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    email: string;\n    password: string;\n\n    constructor(private authService: AuthService,\n                private flashMessage: FlashMessagesService,\n                private router: Router) {\n    }\n\n    ngOnInit() {\n        this.authService.getAuth().subscribe(auth => {\n            if (auth) {\n                this.router.navigate(['/']);\n            }\n        })\n    }\n\n    onSubmit() {\n        this.authService.login(this.email, this.password)\n            .then(res => {\n                this.flashMessage.show('Login realizado com sucesso.', {\n                    cssClass: 'alert-success', timeout: 4000\n                });\n                this.router.navigate(['/']);\n            }).catch(err => {\n            this.flashMessage.show('E-mail e/ou senha incorretos!', {\n                cssClass: 'alert-danger', timeout: 4000\n            });\n        });\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary mb-4\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">Client Panel</a>\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarMain\\\">\\r\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarMain\\\">\\r\\n            <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"isLoggedIn\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Dashboard</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n\\r\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n                <li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/register\\\" class=\\\"nav-link\\\">Register</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"nav-link\\\">{{loggedInUser}}</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/settings\\\" class=\\\"nav-link\\\">Configurações</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\r\\n                    <a href=\\\"#\\\" (click)=\\\"logout()\\\" class=\\\"nav-link\\\">Logout</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {SettingsService} from \"../../services/settings.service\";\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n    isLoggedIn: boolean = false;\n    loggedInUser: string;\n    showRegister: boolean = this.settingsService.getSettings().allowRegistration;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private flashMessage: FlashMessagesService,\n        private settingsService: SettingsService) {\n    }\n\n    ngOnInit() {\n        this.authService.getAuth().subscribe(auth => {\n            if (auth) {\n                this.isLoggedIn = true;\n                this.loggedInUser = auth.email;\n            } else {\n                this.isLoggedIn = false;\n            }\n        })\n    }\n\n    logout() {\n        this.authService.logout();\n        this.flashMessage.show('Você foi deslogado do sistema com sucesso', {\n            cssClass: 'alert-success', timeout: 4000\n        });\n        this.router.navigate(['/login']);\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12 mx-auto\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h1 class=\\\"text-center pb-4 pt-3\\\">\\n                    <i class=\\\"fa fa-lock\\\"></i> Registre-se\\n                </h1>\\n                <form (submit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">E-mail</label>\\n                        <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                               class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"password\\\">Senha</label>\\n                        <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\"\\n                               class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\n                    </div>\\n\\n                    <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n    email: string;\n    password: string;\n\n    constructor(private authService: AuthService,\n                private flashMessage: FlashMessagesService,\n                private router: Router) {\n    }\n\n    ngOnInit() {\n        this.authService.getAuth().subscribe(auth => {\n            if (auth) {\n                this.router.navigate(['/']);\n            }\n        })\n    }\n\n    onSubmit() {\n        this.authService.register(this.email, this.password)\n            .then(res => {\n                this.flashMessage.show('Registro realizado com sucesso.', {\n                    cssClass: 'alert-success', timeout: 4000\n                });\n                this.router.navigate(['/']);\n            }).catch(err => {\n            this.flashMessage.show('Usuário não pode se registrar, verifique os campos e tente novamente!', {\n                cssClass: 'alert-danger', timeout: 4000\n            });\n        });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">\\n            <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Voltar</a>\\n    </div>\\n    <div class=\\\"col-md-6\\\"></div>\\n</div>\\n\\n<div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Editar Configurações</div>\\n    <div class=\\\"card-body\\\">\\n        <form (submit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"allowRegistration\\\">Permitir Registro</label>&nbsp;\\n                <input type=\\\"checkbox\\\"\\n                       name=\\\"allowRegistration\\\" id=\\\"allowRegistration\\\"\\n                       [checked]=\\\"settings.allowRegistration\\\"\\n                       (change)=\\\"updateSetting('allowRegistration')\\\"/>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"disableBalanceOnAdd\\\">Desabilitar Saldo quando Salvar</label>&nbsp;\\n                <input type=\\\"checkbox\\\"\\n                       name=\\\"disableBalanceOnAdd\\\" id=\\\"disableBalanceOnAdd\\\"\\n                       [checked]=\\\"settings.disableBalanceOnAdd\\\"\\n                       (change)=\\\"updateSetting('disableBalanceOnAdd')\\\"/>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"disableBalanceOnEdit\\\">Desabilitar Saldo quando Atualizar</label> &nbsp;\\n                <input type=\\\"checkbox\\\"\\n                       name=\\\"disableBalanceOnEdit\\\" id=\\\"disableBalanceOnEdit\\\"\\n                       [checked]=\\\"settings.disableBalanceOnEdit\\\"\\n                       (change)=\\\"updateSetting('disableBalanceOnEdit')\\\"/>\\n            </div>\\n\\n            <input type=\\\"submit\\\" value=\\\"Salvar\\\" class=\\\"btn btn-primary btn-block\\\">\\n        </form>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {SettingsService} from \"../../services/settings.service\";\nimport {Router} from \"@angular/router\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {Settings} from \"../../models/Settings\";\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n    settings: Settings;\n\n    constructor(private router: Router,\n                private flashMessage: FlashMessagesService,\n                private settingsService: SettingsService) {\n    }\n\n    ngOnInit() {\n        this.settings = this.settingsService.getSettings();\n    }\n\n    updateSetting(setting: string) {\n        switch (setting) {\n            case 'allowRegistration':\n                this.settings.allowRegistration = !this.settings.allowRegistration;\n                break;\n            case 'disableBalanceOnAdd':\n                this.settings.disableBalanceOnAdd = !this.settings.disableBalanceOnAdd;\n                break;\n            case 'disableBalanceOnEdit':\n                this.settings.disableBalanceOnEdit = !this.settings.disableBalanceOnEdit;\n                break;\n            default:\n                break;\n        }\n    }\n\n    onSubmit() {\n        this.settingsService.changeSettings(this.settings);\n        this.flashMessage.show('Configurações salvas com sucesso.', {\n            cssClass: 'alert-success', timeout: 4000\n        });\n        // this.router.navigate(['/']);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a routerLink=\\\"/client/add\\\" class=\\\"btn btn-success btn-block\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i> Adicionar\\r\\n</a>\\r\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {CanActivate, Router} from \"@angular/router\";\r\nimport {AngularFireAuth} from \"@angular/fire/auth\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router,\r\n                private afAuth: AngularFireAuth) {\r\n    }\r\n\r\n    canActivate(): Observable<boolean> {\r\n        return this.afAuth.authState.pipe(map(auth => {\r\n            if (!auth) {\r\n                this.router.navigate(['/login']);\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }));\r\n    }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {CanActivate, Router} from \"@angular/router\";\r\nimport {SettingsService} from \"../services/settings.service\";\r\n\r\n@Injectable()\r\nexport class RegisterGuard implements CanActivate {\r\n\r\n    constructor(private router: Router,\r\n                private settingsService: SettingsService) {\r\n    }\r\n\r\n    canActivate(): boolean {\r\n        if (!this.settingsService.getSettings().allowRegistration) {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private afAuth: AngularFireAuth) {\n    }\n\n    login(email: string, password: string) {\n        return new Promise((resolve, reject) => {\n            this.afAuth.auth.signInWithEmailAndPassword(email, password)\n                .then(userData => resolve(userData), err => reject(err));\n        });\n    }\n\n    logout() {\n        this.afAuth.auth.signOut();\n    }\n\n    getAuth() {\n        return this.afAuth.authState.pipe(map(auth => auth));\n    }\n\n    register(email: string, password: string) {\n        return new Promise((resolve, reject) => {\n            this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n                .then(userData => resolve(userData), err => reject(err));\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from '@angular/fire/firestore';\n// import {AngularFirestore, AngularFirestoreCollection} from 'angularfire2/firestore';\n// import {AngularFirestoreDocument}   from 'angularfire2/firestore';\nimport {Observable} from \"rxjs\";\nimport {map} from 'rxjs/operators';\nimport {Client} from \"../models/Client\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n\n    clientsCollection: AngularFirestoreCollection<Client>;\n    clientDoc: AngularFirestoreDocument<Client>;\n\n    clients: Observable<Client[]>;\n    client: Observable<Client>;\n\n    constructor(private afs: AngularFirestore) {\n        this.clientsCollection = this.afs.collection('clients', ref => ref.orderBy('name', 'asc'));\n        // this.clientsCollection = this.afs.collection<Client>('clients');\n    }\n\n    getClients(): Observable<Client[]> {\n        this.clients = this.clientsCollection.snapshotChanges().pipe(\n            map(changes => {\n                return changes.map(action => {\n                    const data = action.payload.doc.data() as Client;\n                    data.id = action.payload.doc.id;\n                    return data;\n                });\n            }));\n        return this.clients;\n    }\n\n    getClient(id: string): Observable<Client> {\n        this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n        this.client = this.clientDoc.snapshotChanges().pipe(\n            map(action => {\n                if (action.payload.exists === false) {\n                    return null;\n                } else {\n                    const data = action.payload.data() as Client;\n                    data.id = action.payload.id;\n                    return data;\n                }\n            })\n        );\n        return this.client;\n    }\n\n    newClient(client: Client) {\n        this.clientsCollection.add(client);\n    }\n\n    updateClient(client: Client) {\n        this.clientDoc = this.afs.doc(`clients/${client.id}`);\n        this.clientDoc.update(client);\n    }\n\n    deleteClient(client: Client) {\n        this.clientDoc = this.afs.doc(`clients/${client.id}`);\n        this.clientDoc.delete();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Settings} from \"../models/Settings\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService {\n    settings: Settings = {\n        allowRegistration: true,\n        disableBalanceOnAdd: false,\n        disableBalanceOnEdit: true\n    };\n\n    constructor() {\n        if (localStorage.getItem('settings') != null) {\n            this.settings = JSON.parse(localStorage.getItem('settings'));\n        }\n    }\n\n    getSettings(): Settings {\n        return this.settings;\n    }\n\n    changeSettings(settings: Settings) {\n        localStorage.setItem('settings', JSON.stringify(settings));\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    firebase: {\n        apiKey: \"AIzaSyBdoSCgjgqgeXi2wMP61ah9-ekMILidDPg\",\n        authDomain: \"client-dashboard-9db96.firebaseapp.com\",\n        databaseURL: \"https://client-dashboard-9db96.firebaseio.com\",\n        projectId: \"client-dashboard-9db96\",\n        storageBucket: \"client-dashboard-9db96.appspot.com\",\n        messagingSenderId: \"612261451377\",\n        appId: \"1:612261451377:web:1454f91a04955115\"\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":""}